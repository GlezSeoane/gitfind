#!/bin/bash

#####################################################################
# @Project: gitfind                                                 #
# Purpose: 	An utility that finds the git repositories              #
#           included in the directory you want. You can only list   #
#           or apply another specific utility to them. It also      #
#           provides the option to filter the search to capture a   #
#           specific repository.                                    #
#                                                                   #
# @Program: uninstall.sh                                            #
# @Author: Borja GonzÃ¡lez Seoane                                    #
# @Email: garaje@glezseoane.es                                      #
# @Date: 19/10/2019                                                 #
# Program purpose: Main script of the project.                      #
# Output: 0 on success, 1 on illegal parameters error,              #
#           2 on invalid directory error, 3 on not installed or     #
#           reachable utility error and 4 on not applicable utility #
#           to directory error.                                     #
#                                                                   #
# Version: 1.5                                                      #
#                                                                   #
#                 Read manpage for more information                 #
#####################################################################


DIR=$PWD
#UTIL=null
#PATTERN=null
#VAGUE_FILTER_MODE=null

# Output stye
RESTORE="\033[0m"
RED="\033[01;31m"


function paramError {
	echo -en >&2 "${RED}Error: Illegal parameters passed. Aborting...${RESTORE}\n"
}



#************* Reception of input parameters *************#

# Handle all parameters passed
# Input: [-p path] [-f|-F pattern] [-x util]
for (( i=1; i<=$#; i+=2)); do
	case ${!i} in
		"-p")
			j=$((i+1))
			DIR=${!j}
			;;
		"-f")
			j=$((i+1))
			PATTERN=${!j}
			;;
		"-F")
			j=$((i+1))
			PATTERN=${!j}
			VAGUE_FILTER_MODE=true
			;;
		"-x")
			j=$((i+1))
			UTIL=${@: j}
			break
			;;
		*)
			paramError
			exit 1
			;;
	esac
done




#************* Check input parameters *************#

# Purgue DIR specification
DIR="${DIR//\/\///}"

# Check if DIR passed points to a valid directory
if [[ ! -d $DIR ]]; then
	echo -en >&2 "${RED}Error: $DIR is not a valid directory. Aborting...${RESTORE}\n";
	exit 2
fi


# The only list option is equivalent to run pwd in DIR
if [[ -z $UTIL ]]; then
	UTIL="pwd"
fi




#************* MAIN *************#

# Run main with the coupled configuration
find $DIR -name .git -type d -prune | while read d; do
	if [[ -z $PATTERN ]]; then
		cd "$d/.." && (eval $UTIL)
	else
		if [[ -z $VAGUE_FILTER_MODE ]]; then
			if [[ $1 == *"$PATTERN" ]]; then
				cd "$d/.." && (eval $UTIL)
			fi
		else
			if [[ $1 == *"$PATTERN"* ]]; then
				cd "$d/.." && (eval $UTIL)
			fi
		fi
	fi

	# Abort on error
	if [[ "$?" != "0" ]]; then
		echo -en >&2 "${RED}Error: impossible execute $UTIL in $d. Aborting...${RESTORE}\n"
		exit 3
	fi
done



exit 0 # All okey: finish
